#!/bin/bash

# written 2012 by Armin <netzverweigerer@gmail.com>

### wifimagic
### this script is highly beta and beer-ware. if you find it helpful, you can
### give me a free beer if you like.
### it will just terminate some stuff and try to connect to
### wifi with brute force using settings from wpa_supplicant.conf

# specify wpa_supplicant config file
supplicant_config="/etc/wpa_supplicant.conf"

# additional wpa_supplicant options (you can add -d for debugging here)
wpa_supplicant_options=""

# prefix
prefix="••"

# number of tries
tries_num="4"

# host to ping to check internet connection
checkhost="heise.de"

##############################################################################

# check for root
if [ "$UID" != 0 ]; then echo "need to be root. exiting."; exit 1; fi

success=0
tries=0

/etc/rc.d/networkmanager stop
/etc/rc.d/wicd stop

function terminate () {
    f=0 
    pidof "$@" >/dev/null && f=1 
    if [ "$f" == 1 ]; then
        successecho "$@ running, stopping $@ ... "
        (killall "$@" >/dev/null && successecho "Successfully killed $@") || \
        (pkill -x "$@" >/dev/null && successecho "Successfully killed $@")
    fi  
}

function successecho () { echo -e "\033[1;34m${prefix}\033[0m\033[1;38m $@\033[0m"; }
function successecho_nonewline () { echo -ne "\033[1;34m${prefix}\033[0m\033[1;38m $@\033[0m"; }

function failecho () { echo -e "\033[1;34m${prefix}\033[0m\033[1;31m $@\033[0m"; }
function failecho_nonewline () { echo -ne "\033[1;34m${prefix}\033[0m\033[1;31m $@\033[0m"; }

function greenecho () { echo -e "\033[0m\033[1;32m$@\033[0m"; }
function redecho () { echo -e "\033[0m\033[1;31m$@\033[0m"; }

function perform () {
    terminate dhclient
    terminate dhcpcd
    terminate wpa_supplicant
    terminate NetworkManager
    terminate nm-applet
    terminate wicd-gtk
    terminate wicd-client
    successecho "Starting wpa_supplicant ... "
    wpa_supplicant $wpa_supplicant_options -Dwext -iwlan0 -c"$supplicant_config" -B && successecho "wpa_supplicant startup complete, trying to get lease..."
    dhclient wlan0 && successecho "dhclient successfully got a DHCP lease" || failecho "Error: dhclient could not get DHCP lease"
    successecho_nonewline "Checking connection: "
    success=0
    ping -c 1 $checkhost >/dev/null 2>&1 && success=1

    if [ "$success" -eq 1 ]; then
        greenecho "Success, we got a ping reply from $checkhost - enjoy wasting your time."
    else
        redecho "Error, could not ping ${checkhost} :("
        sleep 1
    fi
}


while [[ $success == 0 && $tries -lt $tries_num ]]; do
        let tries=tries+1
        perform
done

