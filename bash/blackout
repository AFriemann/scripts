#! /bin/bash
#
# blackout.sh
# Copyright (C) 2019 Aljosha Friemann <a.friemann@automate.wtf>
#
# Distributed under terms of the 3-clause BSD license.
#

output() { echo -e "${TIMESTAMP:+[$(date -Iseconds)] }$0: $@"; }

red() { output "\033[0;31m$@\033[0m"; }
green() { output "\033[0;32m$@\033[0m"; }
yellow() { output "\033[0;33m$@\033[0m"; }

verbose() { [ "$VERBOSE" ] && output "$@"; }
info() { output "$@"; }
warning() { yellow "$@"; }
error() { red "$@"; }
success() { green "$@"; }

help() {
    echo "usage: $0 on|check|next|off"
}

HOME="$(eval echo ~"$(logname)")"
PERSISTENT_HOSTNAME="$(cat /etc/hostname | tr -d '[:space:]')"

list-devices() { ip link | egrep '^[0-9]+: (enp|wlp|wlan|eth)[a-z0-9]+' | awk -F':' '{ print $2 }' | tr -d ' '; }

current-mac() { macchanger -s "$1" | grep '^Current' | awk '{ print $3 }'; }
persistent-mac() { macchanger -s "$1" | grep '^Permanent' | awk '{ print $3 }'; }
check-mac() { [ "$(current-mac "$1")" = "$(persistent-mac "$1")" ]; }
change-mac() {
    ip link set "$1" down
    macchanger -A "$1"
    ip link set "$1" up
}
restore-mac() {
    ip link set "$1" down
    macchanger -p "$1"
    ip link set "$1" up
}

link-sockets() {
    for file in $(find "$HOME"/ -name "*$PERSISTENT_HOSTNAME*"); do
        ln -v -s "$file" "${file/$PERSISTENT_HOSTNAME/$1}"
    done
}
clean-links() {
    for file in $(find "$HOME"/ -name "*$PERSISTENT_HOSTNAME*"); do
        local fname="$(basename "$file")"

        find "$(dirname "$file")" -iname "${fname/$PERSISTENT_HOSTNAME/*}" -type l -exec rm -v {} \;
    done
}

check-hostname() { [ "$(hostname)" = "$PERSISTENT_HOSTNAME" ]; }
change-hostname() {
    local new_hostname="$(uuidgen | shasum 2>/dev/null | head -c15)"

    hostname "$new_hostname"

    link-sockets "$new_hostname"
}
restore-hostname() {
    hostname "$PERSISTENT_HOSTNAME"

    clean-links
}

check-root() { [ "$EUID" -eq 0 ]; }

on() {
    check-root || { error "needs to run as root" && exit 1; }

    check-hostname && change-hostname

    for dev in $(list-devices); do
        check-mac "$dev" && change-mac "$dev"
    done
}

next() {
    check-root || { error "needs to run as root" && exit 1; }

    clean-links && change-hostname

    for dev in $(list-devices); do
        change-mac "$dev"
    done
}

check() {
    check-hostname && warning "real hostname is set" || success "temporary hostname set to $(hostname)"

    for dev in $(list-devices); do
        check-mac "$dev" && warning "real mac is set on $dev" || success "temporary mac set on $dev"
    done

}

off() {
    check-root || { error "needs to run as root" && exit 1; }

    check-hostname || restore-hostname

    for dev in $(list-devices); do
        check-mac "$dev" || restore-mac "$dev"
    done
}

case $1 in
on) $* ;;
next) $* ;;
check) $* ;;
off) $* ;;
*)
    [ -n "$*" ] && error "Unknown command: $*" && help && exit 1

    next
    ;;
esac

# vim: fenc=utf-8:ts=4:sw=4:expandtab
