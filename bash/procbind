#!/bin/sh
# -*- coding: utf-8 -*-
# pidbind.sh
# created: 2016-09-07
# author: Aljosha Friemann aljosha.friemann@gmail.com

output() { echo -e "`date`: $@"; }

red() { output "\033[0;31m$@\033[0m"; }
green() { output "\033[0;32m$@\033[0m"; }
yellow() { output "\033[0;33m$@\033[0m"; }

info() { output "$@"; }
warning() { yellow "$@"; }
error() { red "$@"; }
success() { green "$@"; }

get_procs() { ps -A --no-headers -o pid,args; }
get_pid() {
    local proc=$1
    get_procs | grep "${proc}" | grep -v "^ $$" | grep -v "grep" | cut -d' ' -f2
}

check_pid() { ps -p "$1" &>/dev/null; }
check_proc() { 
    local pid=$1
    local args=${@:2}
    ps -p "$pid" --no-headers --format="%a" | grep -q "${args}"
}

[ -z "$1" ] && error "no proc supplied" && exit 1

BINDPROC=$1
BINDPID=$(get_pid "$BINDPROC")

if ! check_pid "$BINDPID"; then
    error "process for ${BINDPROC} does not exist" && exit 1
fi

CMD=${@:2}

success "binding to lifetime of process matching $BINDPROC"
info "starting $CMD"

$CMD &
PROCPID=$!

while check_pid "$BINDPID"; do
    if ! check_proc "$PROCPID" "$CMD"; then
        success "process stopped, exiting"
        exit 0
    fi
    sleep 0.5
done

warning "bound process stopped, exiting"

check_proc "$PROCPID" "$CMD" && kill "$PROCPID"

# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4 fenc=utf-8
