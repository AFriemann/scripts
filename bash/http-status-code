#!/bin/sh

C_RESET="\033[0m"
C_GRAY="\033[0;31m"
C_RED="\033[0;31m"
C_GREEN="\033[0;32m"
C_YELLOW="\033[0;33m"

error() { echo -e "${C_RED}$*${C_RESET}"; }
footer() { echo && echo "reference list: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"; }

output() {
    local COLOR CODE NAME DESC CAT

    CODE="$1"
    NAME="$2"
    DESC="$3"

    if [ "$CODE" -lt 200 ]; then
        CAT="Informational Response"
        COLOR="$C_GRAY"
    elif [ "$CODE" -lt 300 ]; then
        CAT="Success"
        COLOR="$C_GREEN"
    elif [ "$CODE" -lt 400 ]; then
        CAT="Redirection"
        COLOR="$C_GREEN"
    elif [ "$CODE" -lt 500 ]; then
        CAT="Client Error"
        COLOR="$C_YELLOW"
    else
        CAT="Server Error"
        COLOR="$C_RED"
    fi

    [ -z "$NAME" ] && NAME="N/A"
    # [ -z "$DESC" ] && DESC="N/A"

    echo -en "${C_GREEN}â†’ ${COLOR}$CAT $CODE - $NAME${DESC:+\n\n$(echo "$DESC" | fold -s | sed 's/^/  /')}${C_RESET}\n"
}

[ -z "$1" ] && error "usage: $0 CODE" && footer && exit 1

case $1 in
    # 1xx
    100) output 100 "Continue" "The server has received the request headers and the client should proceed to send the request body (in the case of a request for which a body needs to be sent; for example, a POST request). Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient. To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request and receive a 100 Continue status code in response before sending the body. If the client receives an error code such as 403 (Forbidden) or 405 (Method Not Allowed) then it shouldn't send the request's body. The response 417 Expectation Failed indicates that the request should be repeated without the Expect header as it indicates that the server doesn't support expectations (this is the case, for example, of HTTP/1.0 servers).";;
    101) output 101 "Switching Protocols" "The requester has asked the server to switch protocols and the server has agreed to do so.";;
    102) output 102 "Processing (WebDAV; RFC 2518)" "A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request. This code indicates that the server has received and is processing the request, but no response is available yet.[6] This prevents the client from timing out and assuming the request was lost.";;
    103)
        output 103 "Early Hints" "Used to return some response headers before final HTTP message."
        output 103 "[unofficial] Checkpoint" "Used in the resumable requests proposal to resume aborted PUT or POST requests."
        ;;

    # 2xx
    200) output 200 "OK" "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request, the response will contain an entity describing or containing the result of the action.";;
    201) output 201 "Created" "The request has been fulfilled, resulting in the creation of a new resource.";;
    202) output 202 "Accepted" "The request has been accepted for processing, but the processing has not been completed. The request might or might not be eventually acted upon, and may be disallowed when processing occurs.";;
    203) output 203 "Non-Authoritative Information (since HTTP/1.1)" "";;
    204) output 204 "No Content" "";;
    205) output 205 "Reset Content" "";;
    206) output 206 "Partial Content (RFC 7233)" "";;
    207) output 207 "Multi-Status (WebDAV; RFC 4918)" "";;
    208) output 208 "Already Reported (WebDAV; RFC 5842)" "";;
    218) output 218 "[unofficial] This is fine (Apache Web Server)" "Used as a catch-all error condition for allowing response bodies to flow through Apache when ProxyErrorOverride is enabled. When ProxyErrorOverride is enabled in Apache, response bodies that contain a status code of 4xx or 5xx are automatically discarded by Apache in favor of a generic response or a custom response specified by the ErrorDocument directive.";;
    226) output 209 "IM Used (RFC 3229)" "";;

    # 3xx
    300) output 300 "Multiple Choices" "";;
    301) output 301 "Moved Permanently" "";;
    302) output 302 "Found (Previously \"Moved temporarily\")" "";;
    303) output 303 "See Other (since HTTP/1.1)" "";;
    304) output 304 "Not Modified (RFC 7232)" "";;
    305) output 305 "Use Proxy (since HTTP/1.1)" "";;
    306) output 306 "Switch Proxy" "";;
    307) output 307 "Temporary Redirect (since HTTP/1.1)" "";;
    308) output 308 "Permanent Redirect (RFC 7538)" "";;

    # 4xx
    400) output 400 "Bad Request" "";;
    401) output 401 "Unauthorized" "";;
    402) output 402 "Payment Required" "";;
    403) output 403 "Forbidden" "";;
    404) output 404 "Not Found" "";;
    405) output 405 "Method Not Allowed" "";;
    406) output 406 "Not Acceptable" "";;
    407) output 407 "Proxy Authentication Required (RFC 7235)" "";;
    408) output 408 "Request Timeout" "";;
    409) output 409 "Conflict" "";;
    410) output 410 "Gone" "";;
    411) output 411 "Length Required" "";;
    412) output 412 "Precondition Failed (RFC 7232)" "";;
    413) output 413 "Payload Too Large (RFC 7231)" "";;
    414) output 414 "URI Too Long (RFC 7231)" "";;
    415) output 415 "Unsupported Media Type (RFC 7231)" "";;
    416) output 416 "Range Not Satisfiable (RFC 7233)" "";;
    417) output 417 "Expectation Failed" "";;
    418) output 418 "I'm a teapot (RFC 2324, RFC 7168)" "";;
    419) output 421 "Misdirected Request (RFC 7540)" "";;
    420)
        output 420 "Unprocessable Entity (WebDAV; RFC 4918)" "" && echo
        output 420 "[unofficial] Method Failure (Spring Framework)" "A deprecated response used by the Spring Framework when a method has failed." && echo
        output 420 "[unofficial] Enhance Your Calm (Twitter)" "Returned by version 1 of the Twitter Search and Trends API when the client is being rate limited; versions 1.1 and later use the 429 Too Many Requests response code instead. The phrase \"Enhance your calm\" comes from the 1993 movie Demolition Man, and its association with this number is likely a reference to cannabis."
        ;;
    421) output 421 "Locked (WebDAV; RFC 4918)" "";;
    422) output 422 "Failed Dependency (WebDAV; RFC 4918)" "";;
    423) output 423 "Too Early (RFC 8470)" "";;
    424) output 424 "Upgrade Required" "";;
    425) output 425 "Precondition Required (RFC 6585)" "";;
    426) output 426 "Too Many Requests (RFC 6585)" "";;
    427) output 427 "Request Header Fields Too Large (RFC 6585)" "";;
    428) output 428 "Unavailable For Legal Reasons (RFC 7725)" "";;
    419) output 419 "[unofficial] Page Expired (Laravel Framework)" "Used by the Laravel Framework when a CSRF Token is missing or expired.";;
    430) output 430 "[unofficial] Request Header Fields Too Large (Shopify)" "Used by Shopify, instead of the 429 Too Many Requests response code, when too many URLs are requested within a certain time frame.";;
    440) output 440 "[unofficial] Login Time-out (IIS)";;
    444) output 444 "[unofficial] No Respose (nginx)" "Used internally to instruct the server to return no information to the client and close the connection immediately.";;
    449) output 449 "[unofficial] Retry With (IIS)";;
    450) output 450 "[unofficial] Blocked by Windows Parental Controls (Microsoft)" "";;
    451) output 451 "[unofficial] Redirect (IIS)" "Used in Exchange ActiveSync when either a more efficient server is available or the server cannot access the users' mailbox.[84] The client is expected to re-run the HTTP AutoDiscover operation to find a more appropriate server.";;
    460) output 460 "[unofficial] (AWS)" "Client closed the connection with the load balancer before the idle timeout period elapsed. Typically when client timeout is sooner than the Elastic Load Balancer's timeout.";;
    463) output 463 "[unofficial] (AWS)" "The load balancer received an X-Forwarded-For request header with more than 30 IP addresses.";;
    494) output 494 "[unofficial] Request header too large (nginx)";;
    495) output 495 "[unofficial] SSL Certificate Error (nginx)";;
    496) output 496 "[unofficial] SSL Certificate Required (nginx)";;
    497) output 497 "[unofficial] HTTP Request Sent to HTTPS Port (nginx)";;
    499) output 499 "[unofficial] Client Closed Request (nginx)";;

    # 5xx
    500) output 500 "Internal Server Error" "";;
    501) output 501 "Not Implemented" "";;
    502) output 502 "Bad Gateway" "";;
    503) output 503 "Service Unavailable" "";;
    504) output 504 "Gateway Timeout" "";;
    505) output 505 "HTTP Version Not Supported" "";;
    506) output 506 "Variant Also Negotiates (RFC 2295)" "";;
    507) output 507 "Insufficient Storage (WebDAV; RFC 4918)" "";;
    508) output 508 "Loop Detected (WebDAV; RFC 5842)" "";;
    509) output 509 "[unofficial] Bandwidth Limit Exceeded (Apache Web Server/cPanel)" "";;
    510) output 510 "Not Extended (RFC 2774)" "";;
    511) output 511 "Network Authentication Required (RFC 6585)" "";;
    520) output 520 "[unofficial] Web Server Returned an Unknown Error (Cloudflare)";;
    521) output 521 "[unofficial] Web Server Is Down (Cloudflare)";;
    522) output 522 "[unofficial] Connection Timed Out (Cloudflare)";;
    523) output 523 "[unofficial] Origin Is Unreachable (Cloudflare)";;
    524) output 524 "[unofficial] A Timeout Occurred (Cloudflare)";;
    525) output 525 "[unofficial] SSL Handshake Failed (Cloudflare)";;
    526) output 526 "[unofficial] Invalid SSL Certificate" "Used by Cloudflare and Cloud Foundry's gorouter to indicate failure to validate the SSL/TLS certificate that the origin server presented.";;
    529) output 529 "[unofficial] Site is overloaded" "Used by Qualys in the SSLLabs server testing API to signal that the site can't process the request";;
    530)
        output 530 "[unofficial] Site is frozen" "Used by the Pantheon web platform to indicate a site that has been frozen due to inactivity." && echo
        output 530 "[unofficial] N/A (Cloudflare)" "Error 530 is returned along with a 1xxx error."
        ;;
    561) output 561 "[unofficial] Authentication Error (AWS)" "Returned by Application Load Balancer when authentication with Idp failed.";;
    598) output 598 "[unofficial] (Informal convention) Network read timeout error";;

    # unknown
    *) error "unknown code $1" && footer && exit 1 ;;
esac

footer
